package daisy.bench.mixed

import daisy.tools.DblDouble

import scala.annotation.strictfp

@strictfp
object Kepler2_double {

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 0.005) */

    def kepler2_double_32(x1: Float, x2: Float, x3: Float, x4: Float, x5: Float, x6: Float, x1_2: Float, x2_2: Float, x3_2: Float, x4_2: Float, x5_2: Float, x6_2: Float): Float = {
    val _tmp5: Float = (x1 * x4)
    val _tmp: Float = -(x1)
    val _tmp1: Float = (_tmp + x2)
    val _tmp2: Float = (_tmp1 + x3)
    val _tmp3: Float = (_tmp2 - x4)
    val _tmp4: Float = (_tmp3 + x5)
    val _tmp6: Float = (_tmp4 + x6)
    val _tmp13: Float = (_tmp5 * _tmp6)
    val _tmp11: Float = (x2 * x5)
    val _tmp7: Float = (x1 - x2)
    val _tmp8: Float = (_tmp7 + x3)
    val _tmp9: Float = (_tmp8 + x4)
    val _tmp10: Float = (_tmp9 - x5)
    val _tmp12: Float = (_tmp10 + x6)
    val _tmp14: Float = (_tmp11 * _tmp12)
    val _tmp21: Float = (_tmp13 + _tmp14)
    val _tmp19: Float = (x3 * x6)
    val _tmp15: Float = (x1 + x2)
    val _tmp16: Float = (_tmp15 - x3)
    val _tmp17: Float = (_tmp16 + x4)
    val _tmp18: Float = (_tmp17 + x5)
    val _tmp20: Float = (_tmp18 - x6)
    val _tmp22: Float = (_tmp19 * _tmp20)
    val _tmp24: Float = (_tmp21 + _tmp22)
    val _tmp23: Float = (x2 * x3)
    val _tmp25: Float = (_tmp23 * x4)
    val _tmp27: Float = (_tmp24 - _tmp25)
    val _tmp26: Float = (x1 * x3)
    val _tmp28: Float = (_tmp26 * x5)
    val _tmp30: Float = (_tmp27 - _tmp28)
    val _tmp29: Float = (x1 * x2)
    val _tmp31: Float = (_tmp29 * x6)
    val _tmp33: Float = (_tmp30 - _tmp31)
    val _tmp32: Float = (x4 * x5)
    val _tmp34: Float = (_tmp32 * x6)
    val _tmp42: Float = (_tmp33 - _tmp34)
    val _tmp40: Float = (x1_2 * x4_2)
    val _tmp35: Float = -(x1_2)
    val _tmp36: Float = (_tmp35 + x2_2)
    val _tmp37: Float = (_tmp36 + x3_2)
    val _tmp38: Float = (_tmp37 - x4_2)
    val _tmp39: Float = (_tmp38 + x5_2)
    val _tmp41: Float = (_tmp39 + x6_2)
    val _tmp43: Float = (_tmp40 * _tmp41)
    val _tmp50: Float = (_tmp42 + _tmp43)
    val _tmp48: Float = (x2_2 * x5_2)
    val _tmp44: Float = (x1_2 - x2_2)
    val _tmp45: Float = (_tmp44 + x3_2)
    val _tmp46: Float = (_tmp45 + x4_2)
    val _tmp47: Float = (_tmp46 - x5_2)
    val _tmp49: Float = (_tmp47 + x6_2)
    val _tmp51: Float = (_tmp48 * _tmp49)
    val _tmp58: Float = (_tmp50 + _tmp51)
    val _tmp56: Float = (x3_2 * x6_2)
    val _tmp52: Float = (x1_2 + x2_2)
    val _tmp53: Float = (_tmp52 - x3_2)
    val _tmp54: Float = (_tmp53 + x4_2)
    val _tmp55: Float = (_tmp54 + x5_2)
    val _tmp57: Float = (_tmp55 - x6_2)
    val _tmp59: Float = (_tmp56 * _tmp57)
    val _tmp61: Float = (_tmp58 + _tmp59)
    val _tmp60: Float = (x2_2 * x3_2)
    val _tmp62: Float = (_tmp60 * x4_2)
    val _tmp64: Float = (_tmp61 - _tmp62)
    val _tmp63: Float = (x1_2 * x3_2)
    val _tmp65: Float = (_tmp63 * x5_2)
    val _tmp67: Float = (_tmp64 - _tmp65)
    val _tmp66: Float = (x1_2 * x2_2)
    val _tmp68: Float = (_tmp66 * x6_2)
    val _tmp70: Float = (_tmp67 - _tmp68)
    val _tmp69: Float = (x4_2 * x5_2)
    val _tmp71: Float = (_tmp69 * x6_2)
    (_tmp70 - _tmp71)
  } // [-1290.1202450859375, 2091.977873823242] +/- 0.002747798297491683

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 0.0025) */

    def kepler2_double_32_05(x1: Float, x2: Float, x3: Float, x4: Float, x5: Float, x6: Float, x1_2: Float, x2_2: Float, x3_2: Float, x4_2: Float, x5_2: Float, x6_2: Float): Double = {
    val _tmp77: Float = (x1 * x4)
    val _tmp72: Float = -(x1)
    val _tmp73: Float = (_tmp72 + x2)
    val _tmp74: Float = (_tmp73 + x3)
    val _tmp75: Float = (_tmp74 - x4)
    val _tmp76: Float = (_tmp75 + x5)
    val _tmp78: Float = (_tmp76 + x6)
    val _tmp85: Float = (_tmp77 * _tmp78)
    val _tmp83: Float = (x2 * x5)
    val _tmp79: Float = (x1 - x2)
    val _tmp80: Float = (_tmp79 + x3)
    val _tmp81: Float = (_tmp80 + x4)
    val _tmp82: Float = (_tmp81 - x5)
    val _tmp84: Float = (_tmp82 + x6)
    val _tmp86: Float = (_tmp83 * _tmp84)
    val _tmp93: Float = (_tmp85 + _tmp86)
    val _tmp91: Float = (x3 * x6)
    val _tmp87: Float = (x1 + x2)
    val _tmp88: Float = (_tmp87 - x3)
    val _tmp89: Float = (_tmp88 + x4)
    val _tmp90: Float = (_tmp89 + x5)
    val _tmp92: Float = (_tmp90 - x6)
    val _tmp94: Float = (_tmp91 * _tmp92)
    val _tmp96: Float = (_tmp93 + _tmp94)
    val _tmp95: Float = (x2 * x3)
    val _tmp97: Float = (_tmp95 * x4)
    val _tmp99: Float = (_tmp96 - _tmp97)
    val _tmp98: Float = (x1 * x3)
    val _tmp100: Float = (_tmp98 * x5)
    val _tmp102: Float = (_tmp99 - _tmp100)
    val _tmp101: Float = (x1 * x2)
    val _tmp103: Float = (_tmp101 * x6)
    val _tmp105: Float = (_tmp102 - _tmp103)
    val _tmp104: Float = (x4 * x5)
    val _tmp106: Float = (_tmp104 * x6)
    val _tmp114: Float = (_tmp105 - _tmp106)
    val _tmp112: Float = (x1_2 * x4_2)
    val _tmp107: Float = -(x1_2)
    val _tmp108: Float = (_tmp107 + x2_2)
    val _tmp109: Float = (_tmp108 + x3_2)
    val _tmp110: Float = (_tmp109 - x4_2)
    val _tmp111: Float = (_tmp110 + x5_2)
    val _tmp113: Float = (_tmp111 + x6_2)
    val _tmp115: Float = (_tmp112 * _tmp113)
    val _tmp122: Float = (_tmp114 + _tmp115)
    val _tmp120: Float = (x2_2 * x5_2)
    val _tmp116: Float = (x1_2 - x2_2)
    val _tmp117: Float = (_tmp116 + x3_2)
    val _tmp118: Float = (_tmp117 + x4_2)
    val _tmp119: Float = (_tmp118 - x5_2)
    val _tmp121: Float = (_tmp119 + x6_2)
    val _tmp123: Double = (_tmp120.toDouble * _tmp121.toDouble)
    val _tmp130: Double = (_tmp122.toDouble + _tmp123)
    val _tmp128: Double = (x3_2.toDouble * x6_2.toDouble)
    val _tmp124: Double = (x1_2.toDouble + x2_2.toDouble)
    val _tmp125: Double = (_tmp124 - x3_2.toDouble)
    val _tmp126: Double = (_tmp125 + x4_2.toDouble)
    val _tmp127: Double = (_tmp126 + x5_2.toDouble)
    val _tmp129: Double = (_tmp127 - x6_2.toDouble)
    val _tmp131: Double = (_tmp128 * _tmp129)
    val _tmp133: Double = (_tmp130 + _tmp131)
    val _tmp132: Double = (x2_2.toDouble * x3_2.toDouble)
    val _tmp134: Double = (_tmp132 * x4_2.toDouble)
    val _tmp136: Double = (_tmp133 - _tmp134)
    val _tmp135: Double = (x1_2.toDouble * x3_2.toDouble)
    val _tmp137: Double = (_tmp135 * x5_2.toDouble)
    val _tmp139: Double = (_tmp136 - _tmp137)
    val _tmp138: Double = (x1_2.toDouble * x2_2.toDouble)
    val _tmp140: Double = (_tmp138 * x6_2.toDouble)
    val _tmp142: Double = (_tmp139 - _tmp140)
    val _tmp141: Double = (x4_2.toDouble * x5_2.toDouble)
    val _tmp143: Double = (_tmp141 * x6_2.toDouble)
    (_tmp142 - _tmp143)
  } // [-1290.1202450859375, 2575.134747953125] +/- 0.0017680566097493396

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 0.0005) */

    def kepler2_double_32_01(x1: Float, x2: Float, x3: Float, x4: Float, x5: Float, x6: Float, x1_2: Float, x2_2: Float, x3_2: Float, x4_2: Float, x5_2: Double, x6_2: Double): Double = {
    val _tmp149: Double = (x1.toDouble * x4.toDouble)
    val _tmp144: Double = -(x1)
    val _tmp145: Double = (_tmp144 + x2.toDouble)
    val _tmp146: Double = (_tmp145 + x3.toDouble)
    val _tmp147: Double = (_tmp146 - x4.toDouble)
    val _tmp148: Double = (_tmp147 + x5.toDouble)
    val _tmp150: Double = (_tmp148 + x6.toDouble)
    val _tmp157: Double = (_tmp149 * _tmp150)
    val _tmp155: Double = (x2.toDouble * x5.toDouble)
    val _tmp151: Double = (x1.toDouble - x2.toDouble)
    val _tmp152: Double = (_tmp151 + x3.toDouble)
    val _tmp153: Double = (_tmp152 + x4.toDouble)
    val _tmp154: Double = (_tmp153 - x5.toDouble)
    val _tmp156: Double = (_tmp154 + x6.toDouble)
    val _tmp158: Double = (_tmp155 * _tmp156)
    val _tmp165: Double = (_tmp157 + _tmp158)
    val _tmp163: Double = (x3.toDouble * x6.toDouble)
    val _tmp159: Double = (x1.toDouble + x2.toDouble)
    val _tmp160: Double = (_tmp159 - x3.toDouble)
    val _tmp161: Double = (_tmp160 + x4.toDouble)
    val _tmp162: Double = (_tmp161 + x5.toDouble)
    val _tmp164: Double = (_tmp162 - x6.toDouble)
    val _tmp166: Double = (_tmp163 * _tmp164)
    val _tmp168: Double = (_tmp165 + _tmp166)
    val _tmp167: Double = (x2.toDouble * x3.toDouble)
    val _tmp169: Double = (_tmp167 * x4.toDouble)
    val _tmp171: Double = (_tmp168 - _tmp169)
    val _tmp170: Double = (x1.toDouble * x3.toDouble)
    val _tmp172: Double = (_tmp170 * x5.toDouble)
    val _tmp174: Double = (_tmp171 - _tmp172)
    val _tmp173: Double = (x1.toDouble * x2.toDouble)
    val _tmp175: Double = (_tmp173 * x6.toDouble)
    val _tmp177: Double = (_tmp174 - _tmp175)
    val _tmp176: Double = (x4.toDouble * x5.toDouble)
    val _tmp178: Double = (_tmp176 * x6.toDouble)
    val _tmp186: Double = (_tmp177 - _tmp178)
    val _tmp184: Double = (x1_2.toDouble * x4_2.toDouble)
    val _tmp179: Double = -(x1_2)
    val _tmp180: Double = (_tmp179 + x2_2.toDouble)
    val _tmp181: Double = (_tmp180 + x3_2.toDouble)
    val _tmp182: Double = (_tmp181 - x4_2.toDouble)
    val _tmp183: Double = (_tmp182 + x5_2)
    val _tmp185: Double = (_tmp183 + x6_2)
    val _tmp187: Double = (_tmp184 * _tmp185)
    val _tmp194: Double = (_tmp186 + _tmp187)
    val _tmp192: Double = (x2_2.toDouble * x5_2)
    val _tmp188: Double = (x1_2.toDouble - x2_2.toDouble)
    val _tmp189: Double = (_tmp188 + x3_2.toDouble)
    val _tmp190: Double = (_tmp189 + x4_2.toDouble)
    val _tmp191: Double = (_tmp190 - x5_2)
    val _tmp193: Double = (_tmp191 + x6_2)
    val _tmp195: Double = (_tmp192 * _tmp193)
    val _tmp202: Double = (_tmp194 + _tmp195)
    val _tmp200: Double = (x3_2.toDouble * x6_2)
    val _tmp196: Double = (x1_2.toDouble + x2_2.toDouble)
    val _tmp197: Double = (_tmp196 - x3_2.toDouble)
    val _tmp198: Double = (_tmp197 + x4_2.toDouble)
    val _tmp199: Double = (_tmp198 + x5_2)
    val _tmp201: Double = (_tmp199 - x6_2)
    val _tmp203: Double = (_tmp200 * _tmp201)
    val _tmp205: Double = (_tmp202 + _tmp203)
    val _tmp204: Double = (x2_2.toDouble * x3_2.toDouble)
    val _tmp206: Double = (_tmp204 * x4_2.toDouble)
    val _tmp208: Double = (_tmp205 - _tmp206)
    val _tmp207: Double = (x1_2.toDouble * x3_2.toDouble)
    val _tmp209: Double = (_tmp207 * x5_2)
    val _tmp211: Double = (_tmp208 - _tmp209)
    val _tmp210: Double = (x1_2.toDouble * x2_2.toDouble)
    val _tmp212: Double = (_tmp210 * x6_2)
    val _tmp214: Double = (_tmp211 - _tmp212)
    val _tmp213: Double = (x4_2.toDouble * x5_2)
    val _tmp215: Double = (_tmp213 * x6_2)
    (_tmp214 - _tmp215)
  } // [-1290.1202450859375, 2091.977873823242] +/- 0.0003528471326757065

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 5.0e-05) */

    def kepler2_double_32_001(x1: Double, x2: Double, x3: Double, x4: Double, x5: Double, x6: Double, x1_2: Double, x2_2: Double, x3_2: Double, x4_2: Double, x5_2: Double, x6_2: Double): Double = {
    val _tmp221: Double = (x1 * x4)
    val _tmp216: Double = -(x1)
    val _tmp217: Double = (_tmp216 + x2)
    val _tmp218: Double = (_tmp217 + x3)
    val _tmp219: Double = (_tmp218 - x4)
    val _tmp220: Double = (_tmp219 + x5)
    val _tmp222: Double = (_tmp220 + x6)
    val _tmp229: Double = (_tmp221 * _tmp222)
    val _tmp227: Double = (x2 * x5)
    val _tmp223: Double = (x1 - x2)
    val _tmp224: Double = (_tmp223 + x3)
    val _tmp225: Double = (_tmp224 + x4)
    val _tmp226: Double = (_tmp225 - x5)
    val _tmp228: Double = (_tmp226 + x6)
    val _tmp230: Double = (_tmp227 * _tmp228)
    val _tmp237: Double = (_tmp229 + _tmp230)
    val _tmp235: Double = (x3 * x6)
    val _tmp231: Double = (x1 + x2)
    val _tmp232: Double = (_tmp231 - x3)
    val _tmp233: Double = (_tmp232 + x4)
    val _tmp234: Double = (_tmp233 + x5)
    val _tmp236: Double = (_tmp234 - x6)
    val _tmp238: Double = (_tmp235 * _tmp236)
    val _tmp240: Double = (_tmp237 + _tmp238)
    val _tmp239: Double = (x2 * x3)
    val _tmp241: Double = (_tmp239 * x4)
    val _tmp243: Double = (_tmp240 - _tmp241)
    val _tmp242: Double = (x1 * x3)
    val _tmp244: Double = (_tmp242 * x5)
    val _tmp246: Double = (_tmp243 - _tmp244)
    val _tmp245: Double = (x1 * x2)
    val _tmp247: Double = (_tmp245 * x6)
    val _tmp249: Double = (_tmp246 - _tmp247)
    val _tmp248: Double = (x4 * x5)
    val _tmp250: Double = (_tmp248 * x6)
    val _tmp258: Double = (_tmp249 - _tmp250)
    val _tmp256: Double = (x1_2 * x4_2)
    val _tmp251: Double = -(x1_2)
    val _tmp252: Double = (_tmp251 + x2_2)
    val _tmp253: Double = (_tmp252 + x3_2)
    val _tmp254: Double = (_tmp253 - x4_2)
    val _tmp255: Double = (_tmp254 + x5_2)
    val _tmp257: Double = (_tmp255 + x6_2)
    val _tmp259: Double = (_tmp256 * _tmp257)
    val _tmp266: Double = (_tmp258 + _tmp259)
    val _tmp264: Double = (x2_2 * x5_2)
    val _tmp260: Double = (x1_2 - x2_2)
    val _tmp261: Double = (_tmp260 + x3_2)
    val _tmp262: Double = (_tmp261 + x4_2)
    val _tmp263: Double = (_tmp262 - x5_2)
    val _tmp265: Double = (_tmp263 + x6_2)
    val _tmp267: Double = (_tmp264 * _tmp265)
    val _tmp274: Double = (_tmp266 + _tmp267)
    val _tmp272: Double = (x3_2 * x6_2)
    val _tmp268: Double = (x1_2 + x2_2)
    val _tmp269: Double = (_tmp268 - x3_2)
    val _tmp270: Double = (_tmp269 + x4_2)
    val _tmp271: Double = (_tmp270 + x5_2)
    val _tmp273: Double = (_tmp271 - x6_2)
    val _tmp275: Double = (_tmp272 * _tmp273)
    val _tmp277: Double = (_tmp274 + _tmp275)
    val _tmp276: Double = (x2_2 * x3_2)
    val _tmp278: Double = (_tmp276 * x4_2)
    val _tmp280: Double = (_tmp277 - _tmp278)
    val _tmp279: Double = (x1_2 * x3_2)
    val _tmp281: Double = (_tmp279 * x5_2)
    val _tmp283: Double = (_tmp280 - _tmp281)
    val _tmp282: Double = (x1_2 * x2_2)
    val _tmp284: Double = (_tmp282 * x6_2)
    val _tmp286: Double = (_tmp283 - _tmp284)
    val _tmp285: Double = (x4_2 * x5_2)
    val _tmp287: Double = (_tmp285 * x6_2)
    (_tmp286 - _tmp287)
  } // [-1290.1202450859375, 2091.977873823242] +/- 5.1181729077143254e-12

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 5.5e-12) */

    def kepler2_double_64(x1: Double, x2: Double, x3: Double, x4: Double, x5: Double, x6: Double, x1_2: Double, x2_2: Double, x3_2: Double, x4_2: Double, x5_2: Double, x6_2: Double): Double = {
    val _tmp293: Double = (x1 * x4)
    val _tmp288: Double = -(x1)
    val _tmp289: Double = (_tmp288 + x2)
    val _tmp290: Double = (_tmp289 + x3)
    val _tmp291: Double = (_tmp290 - x4)
    val _tmp292: Double = (_tmp291 + x5)
    val _tmp294: Double = (_tmp292 + x6)
    val _tmp301: Double = (_tmp293 * _tmp294)
    val _tmp299: Double = (x2 * x5)
    val _tmp295: Double = (x1 - x2)
    val _tmp296: Double = (_tmp295 + x3)
    val _tmp297: Double = (_tmp296 + x4)
    val _tmp298: Double = (_tmp297 - x5)
    val _tmp300: Double = (_tmp298 + x6)
    val _tmp302: Double = (_tmp299 * _tmp300)
    val _tmp309: Double = (_tmp301 + _tmp302)
    val _tmp307: Double = (x3 * x6)
    val _tmp303: Double = (x1 + x2)
    val _tmp304: Double = (_tmp303 - x3)
    val _tmp305: Double = (_tmp304 + x4)
    val _tmp306: Double = (_tmp305 + x5)
    val _tmp308: Double = (_tmp306 - x6)
    val _tmp310: Double = (_tmp307 * _tmp308)
    val _tmp312: Double = (_tmp309 + _tmp310)
    val _tmp311: Double = (x2 * x3)
    val _tmp313: Double = (_tmp311 * x4)
    val _tmp315: Double = (_tmp312 - _tmp313)
    val _tmp314: Double = (x1 * x3)
    val _tmp316: Double = (_tmp314 * x5)
    val _tmp318: Double = (_tmp315 - _tmp316)
    val _tmp317: Double = (x1 * x2)
    val _tmp319: Double = (_tmp317 * x6)
    val _tmp321: Double = (_tmp318 - _tmp319)
    val _tmp320: Double = (x4 * x5)
    val _tmp322: Double = (_tmp320 * x6)
    val _tmp330: Double = (_tmp321 - _tmp322)
    val _tmp328: Double = (x1_2 * x4_2)
    val _tmp323: Double = -(x1_2)
    val _tmp324: Double = (_tmp323 + x2_2)
    val _tmp325: Double = (_tmp324 + x3_2)
    val _tmp326: Double = (_tmp325 - x4_2)
    val _tmp327: Double = (_tmp326 + x5_2)
    val _tmp329: Double = (_tmp327 + x6_2)
    val _tmp331: Double = (_tmp328 * _tmp329)
    val _tmp338: Double = (_tmp330 + _tmp331)
    val _tmp336: Double = (x2_2 * x5_2)
    val _tmp332: Double = (x1_2 - x2_2)
    val _tmp333: Double = (_tmp332 + x3_2)
    val _tmp334: Double = (_tmp333 + x4_2)
    val _tmp335: Double = (_tmp334 - x5_2)
    val _tmp337: Double = (_tmp335 + x6_2)
    val _tmp339: Double = (_tmp336 * _tmp337)
    val _tmp346: Double = (_tmp338 + _tmp339)
    val _tmp344: Double = (x3_2 * x6_2)
    val _tmp340: Double = (x1_2 + x2_2)
    val _tmp341: Double = (_tmp340 - x3_2)
    val _tmp342: Double = (_tmp341 + x4_2)
    val _tmp343: Double = (_tmp342 + x5_2)
    val _tmp345: Double = (_tmp343 - x6_2)
    val _tmp347: Double = (_tmp344 * _tmp345)
    val _tmp349: Double = (_tmp346 + _tmp347)
    val _tmp348: Double = (x2_2 * x3_2)
    val _tmp350: Double = (_tmp348 * x4_2)
    val _tmp352: Double = (_tmp349 - _tmp350)
    val _tmp351: Double = (x1_2 * x3_2)
    val _tmp353: Double = (_tmp351 * x5_2)
    val _tmp355: Double = (_tmp352 - _tmp353)
    val _tmp354: Double = (x1_2 * x2_2)
    val _tmp356: Double = (_tmp354 * x6_2)
    val _tmp358: Double = (_tmp355 - _tmp356)
    val _tmp357: Double = (x4_2 * x5_2)
    val _tmp359: Double = (_tmp357 * x6_2)
    (_tmp358 - _tmp359)
  } // [-1290.1202450859375, 2575.134747953125] +/- 5.2887031642967495e-12

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 2.75e-12) */

    def kepler2_double_64_05(x1: Double, x2: Double, x3: Double, x4: Double, x5: Double, x6: Double, x1_2: Double, x2_2: Double, x3_2: Double, x4_2: Double, x5_2: Double, x6_2: Double): DblDouble = {
    val _tmp365: Double = (x1 * x4)
    val _tmp360: Double = -(x1)
    val _tmp361: Double = (_tmp360 + x2)
    val _tmp362: Double = (_tmp361 + x3)
    val _tmp363: Double = (_tmp362 - x4)
    val _tmp364: Double = (_tmp363 + x5)
    val _tmp366: Double = (_tmp364 + x6)
    val _tmp373: Double = (_tmp365 * _tmp366)
    val _tmp371: Double = (x2 * x5)
    val _tmp367: Double = (x1 - x2)
    val _tmp368: Double = (_tmp367 + x3)
    val _tmp369: Double = (_tmp368 + x4)
    val _tmp370: Double = (_tmp369 - x5)
    val _tmp372: Double = (_tmp370 + x6)
    val _tmp374: Double = (_tmp371 * _tmp372)
    val _tmp381: Double = (_tmp373 + _tmp374)
    val _tmp379: Double = (x3 * x6)
    val _tmp375: Double = (x1 + x2)
    val _tmp376: Double = (_tmp375 - x3)
    val _tmp377: DblDouble = (DblDouble(_tmp376) + DblDouble(x4))
    val _tmp378: DblDouble = (_tmp377 + DblDouble(x5))
    val _tmp380: DblDouble = (_tmp378 - DblDouble(x6))
    val _tmp382: DblDouble = (DblDouble(_tmp379) * _tmp380)
    val _tmp384: DblDouble = (DblDouble(_tmp381) + _tmp382)
    val _tmp383: DblDouble = (DblDouble(x2) * DblDouble(x3))
    val _tmp385: DblDouble = (_tmp383 * DblDouble(x4))
    val _tmp387: DblDouble = (_tmp384 - _tmp385)
    val _tmp386: DblDouble = (DblDouble(x1) * DblDouble(x3))
    val _tmp388: DblDouble = (_tmp386 * DblDouble(x5))
    val _tmp390: DblDouble = (_tmp387 - _tmp388)
    val _tmp389: Double = (x1 * x2)
    val _tmp391: Double = (_tmp389 * x6)
    val _tmp393: Double = (_tmp390 - DblDouble(_tmp391)).toDouble
    val _tmp392: Double = (x4 * x5)
    val _tmp394: Double = (_tmp392 * x6)
    val _tmp402: Double = (_tmp393 - _tmp394)
    val _tmp400: Double = (x1_2 * x4_2)
    val _tmp395: Double = -(x1_2)
    val _tmp396: Double = (_tmp395 + x2_2)
    val _tmp397: Double = (_tmp396 + x3_2)
    val _tmp398: Double = (_tmp397 - x4_2)
    val _tmp399: Double = (_tmp398 + x5_2)
    val _tmp401: Double = (_tmp399 + x6_2)
    val _tmp403: Double = (_tmp400 * _tmp401)
    val _tmp410: Double = (_tmp402 + _tmp403)
    val _tmp408: Double = (x2_2 * x5_2)
    val _tmp404: Double = (x1_2 - x2_2)
    val _tmp405: Double = (_tmp404 + x3_2)
    val _tmp406: Double = (_tmp405 + x4_2)
    val _tmp407: Double = (_tmp406 - x5_2)
    val _tmp409: Double = (_tmp407 + x6_2)
    val _tmp411: DblDouble = (DblDouble(_tmp408) * DblDouble(_tmp409))
    val _tmp418: DblDouble = (DblDouble(_tmp410) + _tmp411)
    val _tmp416: DblDouble = (DblDouble(x3_2) * DblDouble(x6_2))
    val _tmp412: DblDouble = (DblDouble(x1_2) + DblDouble(x2_2))
    val _tmp413: DblDouble = (_tmp412 - DblDouble(x3_2))
    val _tmp414: DblDouble = (_tmp413 + DblDouble(x4_2))
    val _tmp415: DblDouble = (_tmp414 + DblDouble(x5_2))
    val _tmp417: DblDouble = (_tmp415 - DblDouble(x6_2))
    val _tmp419: DblDouble = (_tmp416 * _tmp417)
    val _tmp421: DblDouble = (_tmp418 + _tmp419)
    val _tmp420: DblDouble = (DblDouble(x2_2) * DblDouble(x3_2))
    val _tmp422: DblDouble = (_tmp420 * DblDouble(x4_2))
    val _tmp424: DblDouble = (_tmp421 - _tmp422)
    val _tmp423: DblDouble = (DblDouble(x1_2) * DblDouble(x3_2))
    val _tmp425: DblDouble = (_tmp423 * DblDouble(x5_2))
    val _tmp427: DblDouble = (_tmp424 - _tmp425)
    val _tmp426: DblDouble = (DblDouble(x1_2) * DblDouble(x2_2))
    val _tmp428: DblDouble = (_tmp426 * DblDouble(x6_2))
    val _tmp430: DblDouble = (_tmp427 - _tmp428)
    val _tmp429: DblDouble = (DblDouble(x4_2) * DblDouble(x5_2))
    val _tmp431: DblDouble = (_tmp429 * DblDouble(x6_2))
    (_tmp430 - _tmp431)
  } // [-1290.1202450859375, 2575.134747953125] +/- 2.6136916631003264e-12

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 5.5e-13) */

    def kepler2_double_64_01(x1: DblDouble, x2: DblDouble, x3: DblDouble, x4: DblDouble, x5: DblDouble, x6: Double, x1_2: Double, x2_2: Double, x3_2: Double, x4_2: Double, x5_2: DblDouble, x6_2: DblDouble): DblDouble = {
    val _tmp437: DblDouble = (x1 * x4)
    val _tmp432: DblDouble = -(x1)
    val _tmp433: DblDouble = (_tmp432 + x2)
    val _tmp434: DblDouble = (_tmp433 + x3)
    val _tmp435: DblDouble = (_tmp434 - x4)
    val _tmp436: DblDouble = (_tmp435 + x5)
    val _tmp438: DblDouble = (_tmp436 + DblDouble(x6))
    val _tmp445: DblDouble = (_tmp437 * _tmp438)
    val _tmp443: DblDouble = (x2 * x5)
    val _tmp439: DblDouble = (x1 - x2)
    val _tmp440: DblDouble = (_tmp439 + x3)
    val _tmp441: DblDouble = (_tmp440 + x4)
    val _tmp442: DblDouble = (_tmp441 - x5)
    val _tmp444: DblDouble = (_tmp442 + DblDouble(x6))
    val _tmp446: DblDouble = (_tmp443 * _tmp444)
    val _tmp453: DblDouble = (_tmp445 + _tmp446)
    val _tmp451: DblDouble = (x3 * DblDouble(x6))
    val _tmp447: DblDouble = (x1 + x2)
    val _tmp448: DblDouble = (_tmp447 - x3)
    val _tmp449: DblDouble = (_tmp448 + x4)
    val _tmp450: DblDouble = (_tmp449 + x5)
    val _tmp452: DblDouble = (_tmp450 - DblDouble(x6))
    val _tmp454: DblDouble = (_tmp451 * _tmp452)
    val _tmp456: DblDouble = (_tmp453 + _tmp454)
    val _tmp455: DblDouble = (x2 * x3)
    val _tmp457: DblDouble = (_tmp455 * x4)
    val _tmp459: DblDouble = (_tmp456 - _tmp457)
    val _tmp458: DblDouble = (x1 * x3)
    val _tmp460: DblDouble = (_tmp458 * x5)
    val _tmp462: DblDouble = (_tmp459 - _tmp460)
    val _tmp461: DblDouble = (x1 * x2)
    val _tmp463: DblDouble = (_tmp461 * DblDouble(x6))
    val _tmp465: DblDouble = (_tmp462 - _tmp463)
    val _tmp464: DblDouble = (x4 * x5)
    val _tmp466: DblDouble = (_tmp464 * DblDouble(x6))
    val _tmp474: DblDouble = (_tmp465 - _tmp466)
    val _tmp472: DblDouble = (DblDouble(x1_2) * DblDouble(x4_2))
    val _tmp467: DblDouble = -(x1_2)
    val _tmp468: DblDouble = (_tmp467 + DblDouble(x2_2))
    val _tmp469: DblDouble = (_tmp468 + DblDouble(x3_2))
    val _tmp470: DblDouble = (_tmp469 - DblDouble(x4_2))
    val _tmp471: DblDouble = (_tmp470 + x5_2)
    val _tmp473: DblDouble = (_tmp471 + x6_2)
    val _tmp475: DblDouble = (_tmp472 * _tmp473)
    val _tmp482: DblDouble = (_tmp474 + _tmp475)
    val _tmp480: DblDouble = (DblDouble(x2_2) * x5_2)
    val _tmp476: DblDouble = (DblDouble(x1_2) - DblDouble(x2_2))
    val _tmp477: DblDouble = (_tmp476 + DblDouble(x3_2))
    val _tmp478: DblDouble = (_tmp477 + DblDouble(x4_2))
    val _tmp479: DblDouble = (_tmp478 - x5_2)
    val _tmp481: DblDouble = (_tmp479 + x6_2)
    val _tmp483: DblDouble = (_tmp480 * _tmp481)
    val _tmp490: DblDouble = (_tmp482 + _tmp483)
    val _tmp488: DblDouble = (DblDouble(x3_2) * x6_2)
    val _tmp484: DblDouble = (DblDouble(x1_2) + DblDouble(x2_2))
    val _tmp485: DblDouble = (_tmp484 - DblDouble(x3_2))
    val _tmp486: DblDouble = (_tmp485 + DblDouble(x4_2))
    val _tmp487: DblDouble = (_tmp486 + x5_2)
    val _tmp489: DblDouble = (_tmp487 - x6_2)
    val _tmp491: DblDouble = (_tmp488 * _tmp489)
    val _tmp493: DblDouble = (_tmp490 + _tmp491)
    val _tmp492: DblDouble = (DblDouble(x2_2) * DblDouble(x3_2))
    val _tmp494: DblDouble = (_tmp492 * DblDouble(x4_2))
    val _tmp496: DblDouble = (_tmp493 - _tmp494)
    val _tmp495: DblDouble = (DblDouble(x1_2) * DblDouble(x3_2))
    val _tmp497: DblDouble = (_tmp495 * x5_2)
    val _tmp499: DblDouble = (_tmp496 - _tmp497)
    val _tmp498: DblDouble = (DblDouble(x1_2) * DblDouble(x2_2))
    val _tmp500: DblDouble = (_tmp498 * x6_2)
    val _tmp502: DblDouble = (_tmp499 - _tmp500)
    val _tmp501: DblDouble = (DblDouble(x4_2) * x5_2)
    val _tmp503: DblDouble = (_tmp501 * x6_2)
    (_tmp502 - _tmp503)
  } // [-1290.108449129796, 2575.134747953125] +/- 3.2799611915379505e-13

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 5.5e-14) */

    def kepler2_double_64_001(x1: DblDouble, x2: DblDouble, x3: DblDouble, x4: DblDouble, x5: DblDouble, x6: DblDouble, x1_2: DblDouble, x2_2: DblDouble, x3_2: DblDouble, x4_2: DblDouble, x5_2: DblDouble, x6_2: DblDouble): DblDouble = {
    val _tmp509: DblDouble = (x1 * x4)
    val _tmp504: DblDouble = -(x1)
    val _tmp505: DblDouble = (_tmp504 + x2)
    val _tmp506: DblDouble = (_tmp505 + x3)
    val _tmp507: DblDouble = (_tmp506 - x4)
    val _tmp508: DblDouble = (_tmp507 + x5)
    val _tmp510: DblDouble = (_tmp508 + x6)
    val _tmp517: DblDouble = (_tmp509 * _tmp510)
    val _tmp515: DblDouble = (x2 * x5)
    val _tmp511: DblDouble = (x1 - x2)
    val _tmp512: DblDouble = (_tmp511 + x3)
    val _tmp513: DblDouble = (_tmp512 + x4)
    val _tmp514: DblDouble = (_tmp513 - x5)
    val _tmp516: DblDouble = (_tmp514 + x6)
    val _tmp518: DblDouble = (_tmp515 * _tmp516)
    val _tmp525: DblDouble = (_tmp517 + _tmp518)
    val _tmp523: DblDouble = (x3 * x6)
    val _tmp519: DblDouble = (x1 + x2)
    val _tmp520: DblDouble = (_tmp519 - x3)
    val _tmp521: DblDouble = (_tmp520 + x4)
    val _tmp522: DblDouble = (_tmp521 + x5)
    val _tmp524: DblDouble = (_tmp522 - x6)
    val _tmp526: DblDouble = (_tmp523 * _tmp524)
    val _tmp528: DblDouble = (_tmp525 + _tmp526)
    val _tmp527: DblDouble = (x2 * x3)
    val _tmp529: DblDouble = (_tmp527 * x4)
    val _tmp531: DblDouble = (_tmp528 - _tmp529)
    val _tmp530: DblDouble = (x1 * x3)
    val _tmp532: DblDouble = (_tmp530 * x5)
    val _tmp534: DblDouble = (_tmp531 - _tmp532)
    val _tmp533: DblDouble = (x1 * x2)
    val _tmp535: DblDouble = (_tmp533 * x6)
    val _tmp537: DblDouble = (_tmp534 - _tmp535)
    val _tmp536: DblDouble = (x4 * x5)
    val _tmp538: DblDouble = (_tmp536 * x6)
    val _tmp546: DblDouble = (_tmp537 - _tmp538)
    val _tmp544: DblDouble = (x1_2 * x4_2)
    val _tmp539: DblDouble = -(x1_2)
    val _tmp540: DblDouble = (_tmp539 + x2_2)
    val _tmp541: DblDouble = (_tmp540 + x3_2)
    val _tmp542: DblDouble = (_tmp541 - x4_2)
    val _tmp543: DblDouble = (_tmp542 + x5_2)
    val _tmp545: DblDouble = (_tmp543 + x6_2)
    val _tmp547: DblDouble = (_tmp544 * _tmp545)
    val _tmp554: DblDouble = (_tmp546 + _tmp547)
    val _tmp552: DblDouble = (x2_2 * x5_2)
    val _tmp548: DblDouble = (x1_2 - x2_2)
    val _tmp549: DblDouble = (_tmp548 + x3_2)
    val _tmp550: DblDouble = (_tmp549 + x4_2)
    val _tmp551: DblDouble = (_tmp550 - x5_2)
    val _tmp553: DblDouble = (_tmp551 + x6_2)
    val _tmp555: DblDouble = (_tmp552 * _tmp553)
    val _tmp562: DblDouble = (_tmp554 + _tmp555)
    val _tmp560: DblDouble = (x3_2 * x6_2)
    val _tmp556: DblDouble = (x1_2 + x2_2)
    val _tmp557: DblDouble = (_tmp556 - x3_2)
    val _tmp558: DblDouble = (_tmp557 + x4_2)
    val _tmp559: DblDouble = (_tmp558 + x5_2)
    val _tmp561: DblDouble = (_tmp559 - x6_2)
    val _tmp563: DblDouble = (_tmp560 * _tmp561)
    val _tmp565: DblDouble = (_tmp562 + _tmp563)
    val _tmp564: DblDouble = (x2_2 * x3_2)
    val _tmp566: DblDouble = (_tmp564 * x4_2)
    val _tmp568: DblDouble = (_tmp565 - _tmp566)
    val _tmp567: DblDouble = (x1_2 * x3_2)
    val _tmp569: DblDouble = (_tmp567 * x5_2)
    val _tmp571: DblDouble = (_tmp568 - _tmp569)
    val _tmp570: DblDouble = (x1_2 * x2_2)
    val _tmp572: DblDouble = (_tmp570 * x6_2)
    val _tmp574: DblDouble = (_tmp571 - _tmp572)
    val _tmp573: DblDouble = (x4_2 * x5_2)
    val _tmp575: DblDouble = (_tmp573 * x6_2)
    (_tmp574 - _tmp575)
  } // [-1290.1202450859375, 2091.977873823242] +/- 5.650706941574512e-30

  /* @pre: ((4.0 <= x1) && (x1 <= 6.36) && (4.0 <= x2) && (x2 <= 6.36) && (4.0 <= x3) && (x3 <= 6.36) && (4.0 <= x4) && (x4 <= 6.36) && (4.0 <= x5) && (x5 <= 6.36) && (4.0 <= x6) && (x6 <= 6.36) && (4.0 <= x1_2) && (x1_2 <= 6.36) && (4.0 <= x2_2) && (x2_2 <= 6.36) && (4.0 <= x3_2) && (x3_2 <= 6.36) && (4.0 <= x4_2) && (x4_2 <= 6.36) && (4.0 <= x5_2) && (x5_2 <= 6.36) && (4.0 <= x6_2) && (x6_2 <= 6.36)) */
  /* @post: (res) => (res +/- 6.0e-30) */

    def kepler2_double_dbldbl(x1: DblDouble, x2: DblDouble, x3: DblDouble, x4: DblDouble, x5: DblDouble, x6: DblDouble, x1_2: DblDouble, x2_2: DblDouble, x3_2: DblDouble, x4_2: DblDouble, x5_2: DblDouble, x6_2: DblDouble): DblDouble = {
    val _tmp581: DblDouble = (x1 * x4)
    val _tmp576: DblDouble = -(x1)
    val _tmp577: DblDouble = (_tmp576 + x2)
    val _tmp578: DblDouble = (_tmp577 + x3)
    val _tmp579: DblDouble = (_tmp578 - x4)
    val _tmp580: DblDouble = (_tmp579 + x5)
    val _tmp582: DblDouble = (_tmp580 + x6)
    val _tmp589: DblDouble = (_tmp581 * _tmp582)
    val _tmp587: DblDouble = (x2 * x5)
    val _tmp583: DblDouble = (x1 - x2)
    val _tmp584: DblDouble = (_tmp583 + x3)
    val _tmp585: DblDouble = (_tmp584 + x4)
    val _tmp586: DblDouble = (_tmp585 - x5)
    val _tmp588: DblDouble = (_tmp586 + x6)
    val _tmp590: DblDouble = (_tmp587 * _tmp588)
    val _tmp597: DblDouble = (_tmp589 + _tmp590)
    val _tmp595: DblDouble = (x3 * x6)
    val _tmp591: DblDouble = (x1 + x2)
    val _tmp592: DblDouble = (_tmp591 - x3)
    val _tmp593: DblDouble = (_tmp592 + x4)
    val _tmp594: DblDouble = (_tmp593 + x5)
    val _tmp596: DblDouble = (_tmp594 - x6)
    val _tmp598: DblDouble = (_tmp595 * _tmp596)
    val _tmp600: DblDouble = (_tmp597 + _tmp598)
    val _tmp599: DblDouble = (x2 * x3)
    val _tmp601: DblDouble = (_tmp599 * x4)
    val _tmp603: DblDouble = (_tmp600 - _tmp601)
    val _tmp602: DblDouble = (x1 * x3)
    val _tmp604: DblDouble = (_tmp602 * x5)
    val _tmp606: DblDouble = (_tmp603 - _tmp604)
    val _tmp605: DblDouble = (x1 * x2)
    val _tmp607: DblDouble = (_tmp605 * x6)
    val _tmp609: DblDouble = (_tmp606 - _tmp607)
    val _tmp608: DblDouble = (x4 * x5)
    val _tmp610: DblDouble = (_tmp608 * x6)
    val _tmp618: DblDouble = (_tmp609 - _tmp610)
    val _tmp616: DblDouble = (x1_2 * x4_2)
    val _tmp611: DblDouble = -(x1_2)
    val _tmp612: DblDouble = (_tmp611 + x2_2)
    val _tmp613: DblDouble = (_tmp612 + x3_2)
    val _tmp614: DblDouble = (_tmp613 - x4_2)
    val _tmp615: DblDouble = (_tmp614 + x5_2)
    val _tmp617: DblDouble = (_tmp615 + x6_2)
    val _tmp619: DblDouble = (_tmp616 * _tmp617)
    val _tmp626: DblDouble = (_tmp618 + _tmp619)
    val _tmp624: DblDouble = (x2_2 * x5_2)
    val _tmp620: DblDouble = (x1_2 - x2_2)
    val _tmp621: DblDouble = (_tmp620 + x3_2)
    val _tmp622: DblDouble = (_tmp621 + x4_2)
    val _tmp623: DblDouble = (_tmp622 - x5_2)
    val _tmp625: DblDouble = (_tmp623 + x6_2)
    val _tmp627: DblDouble = (_tmp624 * _tmp625)
    val _tmp634: DblDouble = (_tmp626 + _tmp627)
    val _tmp632: DblDouble = (x3_2 * x6_2)
    val _tmp628: DblDouble = (x1_2 + x2_2)
    val _tmp629: DblDouble = (_tmp628 - x3_2)
    val _tmp630: DblDouble = (_tmp629 + x4_2)
    val _tmp631: DblDouble = (_tmp630 + x5_2)
    val _tmp633: DblDouble = (_tmp631 - x6_2)
    val _tmp635: DblDouble = (_tmp632 * _tmp633)
    val _tmp637: DblDouble = (_tmp634 + _tmp635)
    val _tmp636: DblDouble = (x2_2 * x3_2)
    val _tmp638: DblDouble = (_tmp636 * x4_2)
    val _tmp640: DblDouble = (_tmp637 - _tmp638)
    val _tmp639: DblDouble = (x1_2 * x3_2)
    val _tmp641: DblDouble = (_tmp639 * x5_2)
    val _tmp643: DblDouble = (_tmp640 - _tmp641)
    val _tmp642: DblDouble = (x1_2 * x2_2)
    val _tmp644: DblDouble = (_tmp642 * x6_2)
    val _tmp646: DblDouble = (_tmp643 - _tmp644)
    val _tmp645: DblDouble = (x4_2 * x5_2)
    val _tmp647: DblDouble = (_tmp645 * x6_2)
    (_tmp646 - _tmp647)
  } // [-1290.1202450859375, 2575.134747953125] +/- 6.0229174582638224e-30

}
