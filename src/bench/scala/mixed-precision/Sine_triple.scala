package daisy.bench.mixed

import daisy.tools.DblDouble

import scala.annotation.strictfp

@strictfp
object Sine_triple {

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 2.5e-06) */

    def sine_triple_32(x: Float, x1: Float, x2: Float): Float = {
    val _const0: Float = 6.0f
    val _const1: Float = 120.0f
    val _const2: Float = 5040.0f
    val _const3: Float = 6.0f
    val _const4: Float = 120.0f
    val _const5: Float = 5040.0f
    val _const6: Float = 6.0f
    val _const7: Float = 120.0f
    val _const8: Float = 5040.0f
    val _tmp: Float = (x * x)
    val _tmp1: Float = (_tmp * x)
    val _tmp2: Float = (_tmp1 / _const0)
    val _tmp7: Float = (x - _tmp2)
    val _tmp3: Float = (x * x)
    val _tmp4: Float = (_tmp3 * x)
    val _tmp5: Float = (_tmp4 * x)
    val _tmp6: Float = (_tmp5 * x)
    val _tmp8: Float = (_tmp6 / _const1)
    val _tmp15: Float = (_tmp7 + _tmp8)
    val _tmp9: Float = (x * x)
    val _tmp10: Float = (_tmp9 * x)
    val _tmp11: Float = (_tmp10 * x)
    val _tmp12: Float = (_tmp11 * x)
    val _tmp13: Float = (_tmp12 * x)
    val _tmp14: Float = (_tmp13 * x)
    val _tmp16: Float = (_tmp14 / _const2)
    val _tmp17: Float = (_tmp15 - _tmp16)
    val _tmp20: Float = (_tmp17 + x1)
    val _tmp18: Float = (x1 * x1)
    val _tmp19: Float = (_tmp18 * x1)
    val _tmp21: Float = (_tmp19 / _const3)
    val _tmp26: Float = (_tmp20 - _tmp21)
    val _tmp22: Float = (x1 * x1)
    val _tmp23: Float = (_tmp22 * x1)
    val _tmp24: Float = (_tmp23 * x1)
    val _tmp25: Float = (_tmp24 * x1)
    val _tmp27: Float = (_tmp25 / _const4)
    val _tmp34: Float = (_tmp26 + _tmp27)
    val _tmp28: Float = (x1 * x1)
    val _tmp29: Float = (_tmp28 * x1)
    val _tmp30: Float = (_tmp29 * x1)
    val _tmp31: Float = (_tmp30 * x1)
    val _tmp32: Float = (_tmp31 * x1)
    val _tmp33: Float = (_tmp32 * x1)
    val _tmp35: Float = (_tmp33 / _const5)
    val _tmp36: Float = (_tmp34 - _tmp35)
    val _tmp39: Float = (_tmp36 + x2)
    val _tmp37: Float = (x2 * x2)
    val _tmp38: Float = (_tmp37 * x2)
    val _tmp40: Float = (_tmp38 / _const6)
    val _tmp45: Float = (_tmp39 - _tmp40)
    val _tmp41: Float = (x2 * x2)
    val _tmp42: Float = (_tmp41 * x2)
    val _tmp43: Float = (_tmp42 * x2)
    val _tmp44: Float = (_tmp43 * x2)
    val _tmp46: Float = (_tmp44 / _const7)
    val _tmp53: Float = (_tmp45 + _tmp46)
    val _tmp47: Float = (x2 * x2)
    val _tmp48: Float = (_tmp47 * x2)
    val _tmp49: Float = (_tmp48 * x2)
    val _tmp50: Float = (_tmp49 * x2)
    val _tmp51: Float = (_tmp50 * x2)
    val _tmp52: Float = (_tmp51 * x2)
    val _tmp54: Float = (_tmp52 / _const8)
    (_tmp53 - _tmp54)
  } // [-4.305815191167267, 4.305815191167267] +/- 2.07322398523948e-06

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 1.25e-06) */

    def sine_triple_32_05(x: Float, x1: Float, x2: Float): Double = {
    val _const0: Float = 6.0f
    val _const1: Float = 120.0f
    val _const2: Float = 5040.0f
    val _const3: Float = 6.0f
    val _const4: Float = 120.0f
    val _const5: Float = 5040.0f
    val _const6: Float = 6.0f
    val _const7: Float = 120.0f
    val _const8: Float = 5040.0f
    val _tmp55: Float = (x * x)
    val _tmp56: Float = (_tmp55 * x)
    val _tmp57: Float = (_tmp56 / _const0)
    val _tmp62: Float = (x - _tmp57)
    val _tmp58: Float = (x * x)
    val _tmp59: Float = (_tmp58 * x)
    val _tmp60: Float = (_tmp59 * x)
    val _tmp61: Float = (_tmp60 * x)
    val _tmp63: Float = (_tmp61 / _const1)
    val _tmp70: Float = (_tmp62 + _tmp63)
    val _tmp64: Float = (x * x)
    val _tmp65: Float = (_tmp64 * x)
    val _tmp66: Float = (_tmp65 * x)
    val _tmp67: Float = (_tmp66 * x)
    val _tmp68: Float = (_tmp67 * x)
    val _tmp69: Float = (_tmp68 * x)
    val _tmp71: Float = (_tmp69 / _const2)
    val _tmp72: Float = (_tmp70 - _tmp71)
    val _tmp75: Float = (_tmp72 + x1)
    val _tmp73: Float = (x1 * x1)
    val _tmp74: Float = (_tmp73 * x1)
    val _tmp76: Double = (_tmp74.toDouble / _const3.toDouble)
    val _tmp81: Double = (_tmp75.toDouble - _tmp76)
    val _tmp77: Double = (x1.toDouble * x1.toDouble)
    val _tmp78: Double = (_tmp77 * x1.toDouble)
    val _tmp79: Double = (_tmp78 * x1.toDouble)
    val _tmp80: Double = (_tmp79 * x1.toDouble)
    val _tmp82: Double = (_tmp80 / _const4.toDouble)
    val _tmp89: Double = (_tmp81 + _tmp82)
    val _tmp83: Double = (x1.toDouble * x1.toDouble)
    val _tmp84: Double = (_tmp83 * x1.toDouble)
    val _tmp85: Double = (_tmp84 * x1.toDouble)
    val _tmp86: Double = (_tmp85 * x1.toDouble)
    val _tmp87: Double = (_tmp86 * x1.toDouble)
    val _tmp88: Double = (_tmp87 * x1.toDouble)
    val _tmp90: Double = (_tmp88 / _const5.toDouble)
    val _tmp91: Double = (_tmp89 - _tmp90)
    val _tmp94: Double = (_tmp91 + x2.toDouble)
    val _tmp92: Double = (x2.toDouble * x2.toDouble)
    val _tmp93: Double = (_tmp92 * x2.toDouble)
    val _tmp95: Double = (_tmp93 / _const6.toDouble)
    val _tmp100: Double = (_tmp94 - _tmp95)
    val _tmp96: Double = (x2.toDouble * x2.toDouble)
    val _tmp97: Double = (_tmp96 * x2.toDouble)
    val _tmp98: Double = (_tmp97 * x2.toDouble)
    val _tmp99: Double = (_tmp98 * x2.toDouble)
    val _tmp101: Double = (_tmp99 / _const7.toDouble)
    val _tmp108: Double = (_tmp100 + _tmp101)
    val _tmp102: Double = (x2.toDouble * x2.toDouble)
    val _tmp103: Double = (_tmp102 * x2.toDouble)
    val _tmp104: Double = (_tmp103 * x2.toDouble)
    val _tmp105: Double = (_tmp104 * x2.toDouble)
    val _tmp106: Double = (_tmp105 * x2.toDouble)
    val _tmp107: Double = (_tmp106 * x2.toDouble)
    val _tmp109: Double = (_tmp107 / _const8.toDouble)
    (_tmp108 - _tmp109)
  } // [-4.305815191167267, 4.305815191167267] +/- 7.930962380321003e-07

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 2.5e-07) */

    def sine_triple_32_01(x: Double, x1: Double, x2: Double): Double = {
    val _const0: Double = 6.0
    val _const1: Float = 120.0f
    val _const2: Float = 5040.0f
    val _const3: Float = 6.0f
    val _const4: Float = 120.0f
    val _const5: Double = 5040.0
    val _const6: Double = 6.0
    val _const7: Double = 120.0
    val _const8: Double = 5040.0
    val _tmp110: Double = (x * x)
    val _tmp111: Double = (_tmp110 * x)
    val _tmp112: Double = (_tmp111 / _const0)
    val _tmp117: Double = (x - _tmp112)
    val _tmp113: Double = (x * x)
    val _tmp114: Double = (_tmp113 * x)
    val _tmp115: Double = (_tmp114 * x)
    val _tmp116: Double = (_tmp115 * x)
    val _tmp118: Double = (_tmp116 / _const1.toDouble)
    val _tmp125: Double = (_tmp117 + _tmp118)
    val _tmp119: Double = (x * x)
    val _tmp120: Double = (_tmp119 * x)
    val _tmp121: Double = (_tmp120 * x)
    val _tmp122: Double = (_tmp121 * x)
    val _tmp123: Double = (_tmp122 * x)
    val _tmp124: Double = (_tmp123 * x)
    val _tmp126: Double = (_tmp124 / _const2.toDouble)
    val _tmp127: Double = (_tmp125 - _tmp126)
    val _tmp130: Double = (_tmp127 + x1)
    val _tmp128: Double = (x1 * x1)
    val _tmp129: Double = (_tmp128 * x1)
    val _tmp131: Double = (_tmp129 / _const3.toDouble)
    val _tmp136: Double = (_tmp130 - _tmp131)
    val _tmp132: Double = (x1 * x1)
    val _tmp133: Double = (_tmp132 * x1)
    val _tmp134: Double = (_tmp133 * x1)
    val _tmp135: Double = (_tmp134 * x1)
    val _tmp137: Double = (_tmp135 / _const4.toDouble)
    val _tmp144: Double = (_tmp136 + _tmp137)
    val _tmp138: Double = (x1 * x1)
    val _tmp139: Double = (_tmp138 * x1)
    val _tmp140: Double = (_tmp139 * x1)
    val _tmp141: Double = (_tmp140 * x1)
    val _tmp142: Double = (_tmp141 * x1)
    val _tmp143: Double = (_tmp142 * x1)
    val _tmp145: Double = (_tmp143 / _const5)
    val _tmp146: Double = (_tmp144 - _tmp145)
    val _tmp149: Double = (_tmp146 + x2)
    val _tmp147: Double = (x2 * x2)
    val _tmp148: Double = (_tmp147 * x2)
    val _tmp150: Double = (_tmp148 / _const6)
    val _tmp155: Double = (_tmp149 - _tmp150)
    val _tmp151: Double = (x2 * x2)
    val _tmp152: Double = (_tmp151 * x2)
    val _tmp153: Double = (_tmp152 * x2)
    val _tmp154: Double = (_tmp153 * x2)
    val _tmp156: Double = (_tmp154 / _const7)
    val _tmp163: Double = (_tmp155 + _tmp156)
    val _tmp157: Double = (x2 * x2)
    val _tmp158: Double = (_tmp157 * x2)
    val _tmp159: Double = (_tmp158 * x2)
    val _tmp160: Double = (_tmp159 * x2)
    val _tmp161: Double = (_tmp160 * x2)
    val _tmp162: Double = (_tmp161 * x2)
    val _tmp164: Double = (_tmp162 / _const8)
    (_tmp163 - _tmp164)
  } // [-4.305815191167267, 4.305815191167267] +/- 3.8616805652037e-15

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 2.5e-08) */

    def sine_triple_32_001(x: Double, x1: Double, x2: Double): Double = {
    val _const0: Double = 6.0
    val _const1: Double = 120.0
    val _const2: Double = 5040.0
    val _const3: Double = 6.0
    val _const4: Double = 120.0
    val _const5: Double = 5040.0
    val _const6: Double = 6.0
    val _const7: Double = 120.0
    val _const8: Double = 5040.0
    val _tmp165: Double = (x * x)
    val _tmp166: Double = (_tmp165 * x)
    val _tmp167: Double = (_tmp166 / _const0)
    val _tmp172: Double = (x - _tmp167)
    val _tmp168: Double = (x * x)
    val _tmp169: Double = (_tmp168 * x)
    val _tmp170: Double = (_tmp169 * x)
    val _tmp171: Double = (_tmp170 * x)
    val _tmp173: Double = (_tmp171 / _const1)
    val _tmp180: Double = (_tmp172 + _tmp173)
    val _tmp174: Double = (x * x)
    val _tmp175: Double = (_tmp174 * x)
    val _tmp176: Double = (_tmp175 * x)
    val _tmp177: Double = (_tmp176 * x)
    val _tmp178: Double = (_tmp177 * x)
    val _tmp179: Double = (_tmp178 * x)
    val _tmp181: Double = (_tmp179 / _const2)
    val _tmp182: Double = (_tmp180 - _tmp181)
    val _tmp185: Double = (_tmp182 + x1)
    val _tmp183: Double = (x1 * x1)
    val _tmp184: Double = (_tmp183 * x1)
    val _tmp186: Double = (_tmp184 / _const3)
    val _tmp191: Double = (_tmp185 - _tmp186)
    val _tmp187: Double = (x1 * x1)
    val _tmp188: Double = (_tmp187 * x1)
    val _tmp189: Double = (_tmp188 * x1)
    val _tmp190: Double = (_tmp189 * x1)
    val _tmp192: Double = (_tmp190 / _const4)
    val _tmp199: Double = (_tmp191 + _tmp192)
    val _tmp193: Double = (x1 * x1)
    val _tmp194: Double = (_tmp193 * x1)
    val _tmp195: Double = (_tmp194 * x1)
    val _tmp196: Double = (_tmp195 * x1)
    val _tmp197: Double = (_tmp196 * x1)
    val _tmp198: Double = (_tmp197 * x1)
    val _tmp200: Double = (_tmp198 / _const5)
    val _tmp201: Double = (_tmp199 - _tmp200)
    val _tmp204: Double = (_tmp201 + x2)
    val _tmp202: Double = (x2 * x2)
    val _tmp203: Double = (_tmp202 * x2)
    val _tmp205: Double = (_tmp203 / _const6)
    val _tmp210: Double = (_tmp204 - _tmp205)
    val _tmp206: Double = (x2 * x2)
    val _tmp207: Double = (_tmp206 * x2)
    val _tmp208: Double = (_tmp207 * x2)
    val _tmp209: Double = (_tmp208 * x2)
    val _tmp211: Double = (_tmp209 / _const7)
    val _tmp218: Double = (_tmp210 + _tmp211)
    val _tmp212: Double = (x2 * x2)
    val _tmp213: Double = (_tmp212 * x2)
    val _tmp214: Double = (_tmp213 * x2)
    val _tmp215: Double = (_tmp214 * x2)
    val _tmp216: Double = (_tmp215 * x2)
    val _tmp217: Double = (_tmp216 * x2)
    val _tmp219: Double = (_tmp217 / _const8)
    (_tmp218 - _tmp219)
  } // [-4.305815191167267, 4.305815191167267] +/- 3.8616805652037e-15

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 4.0e-15) */

    def sine_triple_64(x: Double, x1: Double, x2: Double): Double = {
    val _const0: Double = 6.0
    val _const1: Double = 120.0
    val _const2: Double = 5040.0
    val _const3: Double = 6.0
    val _const4: Double = 120.0
    val _const5: Double = 5040.0
    val _const6: Double = 6.0
    val _const7: Double = 120.0
    val _const8: Double = 5040.0
    val _tmp220: Double = (x * x)
    val _tmp221: Double = (_tmp220 * x)
    val _tmp222: Double = (_tmp221 / _const0)
    val _tmp227: Double = (x - _tmp222)
    val _tmp223: Double = (x * x)
    val _tmp224: Double = (_tmp223 * x)
    val _tmp225: Double = (_tmp224 * x)
    val _tmp226: Double = (_tmp225 * x)
    val _tmp228: Double = (_tmp226 / _const1)
    val _tmp235: Double = (_tmp227 + _tmp228)
    val _tmp229: Double = (x * x)
    val _tmp230: Double = (_tmp229 * x)
    val _tmp231: Double = (_tmp230 * x)
    val _tmp232: Double = (_tmp231 * x)
    val _tmp233: Double = (_tmp232 * x)
    val _tmp234: Double = (_tmp233 * x)
    val _tmp236: Double = (_tmp234 / _const2)
    val _tmp237: Double = (_tmp235 - _tmp236)
    val _tmp240: Double = (_tmp237 + x1)
    val _tmp238: Double = (x1 * x1)
    val _tmp239: Double = (_tmp238 * x1)
    val _tmp241: Double = (_tmp239 / _const3)
    val _tmp246: Double = (_tmp240 - _tmp241)
    val _tmp242: Double = (x1 * x1)
    val _tmp243: Double = (_tmp242 * x1)
    val _tmp244: Double = (_tmp243 * x1)
    val _tmp245: Double = (_tmp244 * x1)
    val _tmp247: Double = (_tmp245 / _const4)
    val _tmp254: Double = (_tmp246 + _tmp247)
    val _tmp248: Double = (x1 * x1)
    val _tmp249: Double = (_tmp248 * x1)
    val _tmp250: Double = (_tmp249 * x1)
    val _tmp251: Double = (_tmp250 * x1)
    val _tmp252: Double = (_tmp251 * x1)
    val _tmp253: Double = (_tmp252 * x1)
    val _tmp255: Double = (_tmp253 / _const5)
    val _tmp256: Double = (_tmp254 - _tmp255)
    val _tmp259: Double = (_tmp256 + x2)
    val _tmp257: Double = (x2 * x2)
    val _tmp258: Double = (_tmp257 * x2)
    val _tmp260: Double = (_tmp258 / _const6)
    val _tmp265: Double = (_tmp259 - _tmp260)
    val _tmp261: Double = (x2 * x2)
    val _tmp262: Double = (_tmp261 * x2)
    val _tmp263: Double = (_tmp262 * x2)
    val _tmp264: Double = (_tmp263 * x2)
    val _tmp266: Double = (_tmp264 / _const7)
    val _tmp273: Double = (_tmp265 + _tmp266)
    val _tmp267: Double = (x2 * x2)
    val _tmp268: Double = (_tmp267 * x2)
    val _tmp269: Double = (_tmp268 * x2)
    val _tmp270: Double = (_tmp269 * x2)
    val _tmp271: Double = (_tmp270 * x2)
    val _tmp272: Double = (_tmp271 * x2)
    val _tmp274: Double = (_tmp272 / _const8)
    (_tmp273 - _tmp274)
  } // [-4.305815191167267, 4.305815191167267] +/- 3.8616805652037e-15

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 2.0e-15) */

    def sine_triple_64_05(x: Double, x1: Double, x2: Double): DblDouble = {
    val _const0: Double = 6.0
    val _const1: Double = 120.0
    val _const2: Float = 5040.0f
    val _const3: Float = 6.0f
    val _const4: Float = 120.0f
    val _const5: Float = 5040.0f
    val _const6: Float = 6.0f
    val _const7: Double = 120.0
    val _const8: Double = 5040.0
    val _tmp275: Double = (x * x)
    val _tmp276: Double = (_tmp275 * x)
    val _tmp277: Double = (_tmp276 / _const0)
    val _tmp282: Double = (x - _tmp277)
    val _tmp278: Double = (x * x)
    val _tmp279: Double = (_tmp278 * x)
    val _tmp280: Double = (_tmp279 * x)
    val _tmp281: Double = (_tmp280 * x)
    val _tmp283: Double = (_tmp281 / _const1)
    val _tmp290: Double = (_tmp282 + _tmp283)
    val _tmp284: Double = (x * x)
    val _tmp285: Double = (_tmp284 * x)
    val _tmp286: Double = (_tmp285 * x)
    val _tmp287: DblDouble = (DblDouble(_tmp286) * DblDouble(x))
    val _tmp288: DblDouble = (_tmp287 * DblDouble(x))
    val _tmp289: DblDouble = (_tmp288 * DblDouble(x))
    val _tmp291: DblDouble = (_tmp289 / DblDouble(_const2))
    val _tmp292: DblDouble = (DblDouble(_tmp290) - _tmp291)
    val _tmp295: DblDouble = (_tmp292 + DblDouble(x1))
    val _tmp293: DblDouble = (DblDouble(x1) * DblDouble(x1))
    val _tmp294: DblDouble = (_tmp293 * DblDouble(x1))
    val _tmp296: Double = (_tmp294 / DblDouble(_const3)).toDouble
    val _tmp301: Double = (_tmp295 - DblDouble(_tmp296)).toDouble
    val _tmp297: Double = (x1 * x1)
    val _tmp298: Double = (_tmp297 * x1)
    val _tmp299: Double = (_tmp298 * x1)
    val _tmp300: Double = (_tmp299 * x1)
    val _tmp302: Double = (_tmp300 / _const4.toDouble)
    val _tmp309: Double = (_tmp301 + _tmp302)
    val _tmp303: Double = (x1 * x1)
    val _tmp304: Double = (_tmp303 * x1)
    val _tmp305: Double = (_tmp304 * x1)
    val _tmp306: Double = (_tmp305 * x1)
    val _tmp307: Double = (_tmp306 * x1)
    val _tmp308: Double = (_tmp307 * x1)
    val _tmp310: Double = (_tmp308 / _const5.toDouble)
    val _tmp311: Double = (_tmp309 - _tmp310)
    val _tmp314: Double = (_tmp311 + x2)
    val _tmp312: DblDouble = (DblDouble(x2) * DblDouble(x2))
    val _tmp313: DblDouble = (_tmp312 * DblDouble(x2))
    val _tmp315: DblDouble = (_tmp313 / DblDouble(_const6))
    val _tmp320: DblDouble = (DblDouble(_tmp314) - _tmp315)
    val _tmp316: DblDouble = (DblDouble(x2) * DblDouble(x2))
    val _tmp317: DblDouble = (_tmp316 * DblDouble(x2))
    val _tmp318: DblDouble = (_tmp317 * DblDouble(x2))
    val _tmp319: DblDouble = (_tmp318 * DblDouble(x2))
    val _tmp321: DblDouble = (_tmp319 / DblDouble(_const7))
    val _tmp328: DblDouble = (_tmp320 + _tmp321)
    val _tmp322: DblDouble = (DblDouble(x2) * DblDouble(x2))
    val _tmp323: DblDouble = (_tmp322 * DblDouble(x2))
    val _tmp324: DblDouble = (_tmp323 * DblDouble(x2))
    val _tmp325: DblDouble = (_tmp324 * DblDouble(x2))
    val _tmp326: DblDouble = (_tmp325 * DblDouble(x2))
    val _tmp327: DblDouble = (_tmp326 * DblDouble(x2))
    val _tmp329: DblDouble = (_tmp327 / DblDouble(_const8))
    (_tmp328 - _tmp329)
  } // [-4.305815191167267, 4.305815191167267] +/- 1.914640401575882e-15

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 4.0e-16) */

    def sine_triple_64_01(x: DblDouble, x1: DblDouble, x2: DblDouble): DblDouble = {
    val _const0: DblDouble = 6.0
    val _const1: DblDouble = 120.0
    val _const2: DblDouble = 5040.0
    val _const3: DblDouble = 6.0
    val _const4: DblDouble = 120.0
    val _const5: DblDouble = 5040.0
    val _const6: DblDouble = 6.0
    val _const7: DblDouble = 120.0
    val _const8: DblDouble = 5040.0
    val _tmp330: DblDouble = (x * x)
    val _tmp331: DblDouble = (_tmp330 * x)
    val _tmp332: DblDouble = (_tmp331 / _const0)
    val _tmp337: DblDouble = (x - _tmp332)
    val _tmp333: DblDouble = (x * x)
    val _tmp334: DblDouble = (_tmp333 * x)
    val _tmp335: DblDouble = (_tmp334 * x)
    val _tmp336: DblDouble = (_tmp335 * x)
    val _tmp338: DblDouble = (_tmp336 / _const1)
    val _tmp345: DblDouble = (_tmp337 + _tmp338)
    val _tmp339: DblDouble = (x * x)
    val _tmp340: DblDouble = (_tmp339 * x)
    val _tmp341: DblDouble = (_tmp340 * x)
    val _tmp342: DblDouble = (_tmp341 * x)
    val _tmp343: DblDouble = (_tmp342 * x)
    val _tmp344: DblDouble = (_tmp343 * x)
    val _tmp346: DblDouble = (_tmp344 / _const2)
    val _tmp347: DblDouble = (_tmp345 - _tmp346)
    val _tmp350: DblDouble = (_tmp347 + x1)
    val _tmp348: DblDouble = (x1 * x1)
    val _tmp349: DblDouble = (_tmp348 * x1)
    val _tmp351: DblDouble = (_tmp349 / _const3)
    val _tmp356: DblDouble = (_tmp350 - _tmp351)
    val _tmp352: DblDouble = (x1 * x1)
    val _tmp353: DblDouble = (_tmp352 * x1)
    val _tmp354: DblDouble = (_tmp353 * x1)
    val _tmp355: DblDouble = (_tmp354 * x1)
    val _tmp357: DblDouble = (_tmp355 / _const4)
    val _tmp364: DblDouble = (_tmp356 + _tmp357)
    val _tmp358: DblDouble = (x1 * x1)
    val _tmp359: DblDouble = (_tmp358 * x1)
    val _tmp360: DblDouble = (_tmp359 * x1)
    val _tmp361: DblDouble = (_tmp360 * x1)
    val _tmp362: DblDouble = (_tmp361 * x1)
    val _tmp363: DblDouble = (_tmp362 * x1)
    val _tmp365: DblDouble = (_tmp363 / _const5)
    val _tmp366: DblDouble = (_tmp364 - _tmp365)
    val _tmp369: DblDouble = (_tmp366 + x2)
    val _tmp367: DblDouble = (x2 * x2)
    val _tmp368: DblDouble = (_tmp367 * x2)
    val _tmp370: DblDouble = (_tmp368 / _const6)
    val _tmp375: DblDouble = (_tmp369 - _tmp370)
    val _tmp371: DblDouble = (x2 * x2)
    val _tmp372: DblDouble = (_tmp371 * x2)
    val _tmp373: DblDouble = (_tmp372 * x2)
    val _tmp374: DblDouble = (_tmp373 * x2)
    val _tmp376: DblDouble = (_tmp374 / _const7)
    val _tmp383: DblDouble = (_tmp375 + _tmp376)
    val _tmp377: DblDouble = (x2 * x2)
    val _tmp378: DblDouble = (_tmp377 * x2)
    val _tmp379: DblDouble = (_tmp378 * x2)
    val _tmp380: DblDouble = (_tmp379 * x2)
    val _tmp381: DblDouble = (_tmp380 * x2)
    val _tmp382: DblDouble = (_tmp381 * x2)
    val _tmp384: DblDouble = (_tmp382 / _const8)
    (_tmp383 - _tmp384)
  } // [-4.305815191167267, 4.305815191167267] +/- 4.5314704898947925e-33

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 4.0e-17) */

    def sine_triple_64_001(x: DblDouble, x1: DblDouble, x2: DblDouble): DblDouble = {
    val _const0: DblDouble = 6.0
    val _const1: DblDouble = 120.0
    val _const2: DblDouble = 5040.0
    val _const3: DblDouble = 6.0
    val _const4: DblDouble = 120.0
    val _const5: DblDouble = 5040.0
    val _const6: DblDouble = 6.0
    val _const7: DblDouble = 120.0
    val _const8: DblDouble = 5040.0
    val _tmp385: DblDouble = (x * x)
    val _tmp386: DblDouble = (_tmp385 * x)
    val _tmp387: DblDouble = (_tmp386 / _const0)
    val _tmp392: DblDouble = (x - _tmp387)
    val _tmp388: DblDouble = (x * x)
    val _tmp389: DblDouble = (_tmp388 * x)
    val _tmp390: DblDouble = (_tmp389 * x)
    val _tmp391: DblDouble = (_tmp390 * x)
    val _tmp393: DblDouble = (_tmp391 / _const1)
    val _tmp400: DblDouble = (_tmp392 + _tmp393)
    val _tmp394: DblDouble = (x * x)
    val _tmp395: DblDouble = (_tmp394 * x)
    val _tmp396: DblDouble = (_tmp395 * x)
    val _tmp397: DblDouble = (_tmp396 * x)
    val _tmp398: DblDouble = (_tmp397 * x)
    val _tmp399: DblDouble = (_tmp398 * x)
    val _tmp401: DblDouble = (_tmp399 / _const2)
    val _tmp402: DblDouble = (_tmp400 - _tmp401)
    val _tmp405: DblDouble = (_tmp402 + x1)
    val _tmp403: DblDouble = (x1 * x1)
    val _tmp404: DblDouble = (_tmp403 * x1)
    val _tmp406: DblDouble = (_tmp404 / _const3)
    val _tmp411: DblDouble = (_tmp405 - _tmp406)
    val _tmp407: DblDouble = (x1 * x1)
    val _tmp408: DblDouble = (_tmp407 * x1)
    val _tmp409: DblDouble = (_tmp408 * x1)
    val _tmp410: DblDouble = (_tmp409 * x1)
    val _tmp412: DblDouble = (_tmp410 / _const4)
    val _tmp419: DblDouble = (_tmp411 + _tmp412)
    val _tmp413: DblDouble = (x1 * x1)
    val _tmp414: DblDouble = (_tmp413 * x1)
    val _tmp415: DblDouble = (_tmp414 * x1)
    val _tmp416: DblDouble = (_tmp415 * x1)
    val _tmp417: DblDouble = (_tmp416 * x1)
    val _tmp418: DblDouble = (_tmp417 * x1)
    val _tmp420: DblDouble = (_tmp418 / _const5)
    val _tmp421: DblDouble = (_tmp419 - _tmp420)
    val _tmp424: DblDouble = (_tmp421 + x2)
    val _tmp422: DblDouble = (x2 * x2)
    val _tmp423: DblDouble = (_tmp422 * x2)
    val _tmp425: DblDouble = (_tmp423 / _const6)
    val _tmp430: DblDouble = (_tmp424 - _tmp425)
    val _tmp426: DblDouble = (x2 * x2)
    val _tmp427: DblDouble = (_tmp426 * x2)
    val _tmp428: DblDouble = (_tmp427 * x2)
    val _tmp429: DblDouble = (_tmp428 * x2)
    val _tmp431: DblDouble = (_tmp429 / _const7)
    val _tmp438: DblDouble = (_tmp430 + _tmp431)
    val _tmp432: DblDouble = (x2 * x2)
    val _tmp433: DblDouble = (_tmp432 * x2)
    val _tmp434: DblDouble = (_tmp433 * x2)
    val _tmp435: DblDouble = (_tmp434 * x2)
    val _tmp436: DblDouble = (_tmp435 * x2)
    val _tmp437: DblDouble = (_tmp436 * x2)
    val _tmp439: DblDouble = (_tmp437 / _const8)
    (_tmp438 - _tmp439)
  } // [-4.305815191167267, 4.305815191167267] +/- 4.5314704898947925e-33

  /* @pre: ((x > -1.57079632679) && (x < 1.57079632679) && (x1 > -1.57079632679) && (x1 < 1.57079632679) && (x2 > -1.57079632679) && (x2 < 1.57079632679)) */
  /* @post: (res) => (res +/- 4.5e-33) */

    def sine_triple_dbldbl(x: DblDouble, x1: DblDouble, x2: DblDouble): DblDouble = {
    val _const0: DblDouble = 6.0
    val _const1: DblDouble = 120.0
    val _const2: DblDouble = 5040.0
    val _const3: DblDouble = 6.0
    val _const4: DblDouble = 120.0
    val _const5: DblDouble = 5040.0
    val _const6: DblDouble = 6.0
    val _const7: DblDouble = 120.0
    val _const8: DblDouble = 5040.0
    val _tmp440: DblDouble = (x * x)
    val _tmp441: DblDouble = (_tmp440 * x)
    val _tmp442: DblDouble = (_tmp441 / _const0)
    val _tmp447: DblDouble = (x - _tmp442)
    val _tmp443: DblDouble = (x * x)
    val _tmp444: DblDouble = (_tmp443 * x)
    val _tmp445: DblDouble = (_tmp444 * x)
    val _tmp446: DblDouble = (_tmp445 * x)
    val _tmp448: DblDouble = (_tmp446 / _const1)
    val _tmp455: DblDouble = (_tmp447 + _tmp448)
    val _tmp449: DblDouble = (x * x)
    val _tmp450: DblDouble = (_tmp449 * x)
    val _tmp451: DblDouble = (_tmp450 * x)
    val _tmp452: DblDouble = (_tmp451 * x)
    val _tmp453: DblDouble = (_tmp452 * x)
    val _tmp454: DblDouble = (_tmp453 * x)
    val _tmp456: DblDouble = (_tmp454 / _const2)
    val _tmp457: DblDouble = (_tmp455 - _tmp456)
    val _tmp460: DblDouble = (_tmp457 + x1)
    val _tmp458: DblDouble = (x1 * x1)
    val _tmp459: DblDouble = (_tmp458 * x1)
    val _tmp461: DblDouble = (_tmp459 / _const3)
    val _tmp466: DblDouble = (_tmp460 - _tmp461)
    val _tmp462: DblDouble = (x1 * x1)
    val _tmp463: DblDouble = (_tmp462 * x1)
    val _tmp464: DblDouble = (_tmp463 * x1)
    val _tmp465: DblDouble = (_tmp464 * x1)
    val _tmp467: DblDouble = (_tmp465 / _const4)
    val _tmp474: DblDouble = (_tmp466 + _tmp467)
    val _tmp468: DblDouble = (x1 * x1)
    val _tmp469: DblDouble = (_tmp468 * x1)
    val _tmp470: DblDouble = (_tmp469 * x1)
    val _tmp471: DblDouble = (_tmp470 * x1)
    val _tmp472: DblDouble = (_tmp471 * x1)
    val _tmp473: DblDouble = (_tmp472 * x1)
    val _tmp475: DblDouble = (_tmp473 / _const5)
    val _tmp476: DblDouble = (_tmp474 - _tmp475)
    val _tmp479: DblDouble = (_tmp476 + x2)
    val _tmp477: DblDouble = (x2 * x2)
    val _tmp478: DblDouble = (_tmp477 * x2)
    val _tmp480: DblDouble = (_tmp478 / _const6)
    val _tmp485: DblDouble = (_tmp479 - _tmp480)
    val _tmp481: DblDouble = (x2 * x2)
    val _tmp482: DblDouble = (_tmp481 * x2)
    val _tmp483: DblDouble = (_tmp482 * x2)
    val _tmp484: DblDouble = (_tmp483 * x2)
    val _tmp486: DblDouble = (_tmp484 / _const7)
    val _tmp493: DblDouble = (_tmp485 + _tmp486)
    val _tmp487: DblDouble = (x2 * x2)
    val _tmp488: DblDouble = (_tmp487 * x2)
    val _tmp489: DblDouble = (_tmp488 * x2)
    val _tmp490: DblDouble = (_tmp489 * x2)
    val _tmp491: DblDouble = (_tmp490 * x2)
    val _tmp492: DblDouble = (_tmp491 * x2)
    val _tmp494: DblDouble = (_tmp492 / _const8)
    (_tmp493 - _tmp494)
  } // [-4.305815191167267, 4.305815191167267] +/- 4.5314704898947925e-33

}
