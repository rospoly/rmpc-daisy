package daisy.bench.mixedfixed


import scala.annotation.strictfp

@strictfp
object Kepler2 {

  /*@pre : ((4. <= x1) && (x1 <= 6.36) && (4. <= x2) && (x2 <= 6.36) && (4. <= x3) && (x3 <= 6.36) && (4. <= x4) && (x4 <= 6.36) && (4. <= x5) && (x5 <= 6.36) && (4. <= x6) && (x6 <= 6.36))*/
  /*@post: (res) => (res +/- 0.65)*/
  /*()*/
    def kepler2_fixed16(x1 : Int, x2 : Int, x3 : Int, x4 : Int, x5 : Int, x6 : Int) : Int = {
    val _tmp5: Int = ((x1 * x4) >> 16)
    val _tmp: Int = -(x1)
    val _tmp1: Int = ((_tmp + x2) << 1)
    val _tmp2: Int = ((_tmp1 + (x3 << 1)) >> 2)
    val _tmp3: Int = ((_tmp2 << 1) - x4)
    val _tmp4: Int = ((_tmp3 + x5) >> 1)
    val _tmp6: Int = (((_tmp4 << 1) + x6) >> 2)
    val _tmp13: Int = ((_tmp5 * _tmp6) >> 15)
    val _tmp11: Int = ((x2 * x5) >> 16)
    val _tmp7: Int = ((x1 - x2) << 1)
    val _tmp8: Int = ((_tmp7 + (x3 << 1)) >> 2)
    val _tmp9: Int = (((_tmp8 << 1) + x4) >> 1)
    val _tmp10: Int = (((_tmp9 << 1) - x5) >> 1)
    val _tmp12: Int = (((_tmp10 << 1) + x6) >> 2)
    val _tmp14: Int = ((_tmp11 * _tmp12) >> 15)
    val _tmp21: Int = ((_tmp13 + _tmp14) >> 1)
    val _tmp19: Int = ((x3 * x6) >> 16)
    val _tmp15: Int = ((x1 + x2) >> 1)
    val _tmp16: Int = (((_tmp15 << 1) - x3) >> 1)
    val _tmp17: Int = (((_tmp16 << 1) + x4) >> 1)
    val _tmp18: Int = (((_tmp17 << 1) + x5) >> 2)
    val _tmp20: Int = (((_tmp18 << 2) - x6) >> 2)
    val _tmp22: Int = ((_tmp19 * _tmp20) >> 15)
    val _tmp24: Int = (((_tmp21 << 1) + _tmp22) >> 1)
    val _tmp23: Int = ((x2 * x3) >> 16)
    val _tmp25: Int = ((_tmp23 * x4) >> 16)
    val _tmp27: Int = (((_tmp24 << 2) - _tmp25) >> 2)
    val _tmp26: Int = ((x1 * x3) >> 16)
    val _tmp28: Int = ((_tmp26 * x5) >> 16)
    val _tmp30: Int = (((_tmp27 << 2) - _tmp28) >> 2)
    val _tmp29: Int = ((x1 * x2) >> 16)
    val _tmp31: Int = ((_tmp29 * x6) >> 16)
    val _tmp33: Int = (((_tmp30 << 2) - _tmp31) >> 2)
    val _tmp32: Int = ((x4 * x5) >> 16)
    val _tmp34: Int = ((_tmp32 * x6) >> 16)
    (((_tmp33 << 2) - _tmp34) >> 1)
  }

  /*@pre : ((4. <= x1) && (x1 <= 6.36) && (4. <= x2) && (x2 <= 6.36) && (4. <= x3) && (x3 <= 6.36) && (4. <= x4) && (x4 <= 6.36) && (4. <= x5) && (x5 <= 6.36) && (4. <= x6) && (x6 <= 6.36))*/
  /*@post: (res) => (res +/- 0.325)*/
  /*()*/
    def kepler2_fixed16_05(x1 : Int, x2 : Int, x3 : Int, x4 : Int, x5 : Int, x6 : Int) : Long = {
    val _tmp40: Int = ((x1 * x4) >> 16)
    val _tmp35: Int = -(x1)
    val _tmp36: Int = ((_tmp35 + x2) << 1)
    val _tmp37: Int = ((_tmp36 + (x3 << 1)) >> 2)
    val _tmp38: Int = ((_tmp37 << 1) - x4)
    val _tmp39: Int = ((_tmp38 + x5) >> 1)
    val _tmp41: Int = (((_tmp39 << 1) + x6) >> 2)
    val _tmp48: Int = ((_tmp40 * _tmp41) >> 15)
    val _tmp46: Int = ((x2 * x5) >> 16)
    val _tmp42: Int = ((x1 - x2) << 1)
    val _tmp43: Int = ((_tmp42 + (x3 << 1)) >> 2)
    val _tmp44: Int = (((_tmp43 << 1) + x4) >> 1)
    val _tmp45: Int = (((_tmp44 << 1) - x5) >> 1)
    val _tmp47: Int = (((_tmp45 << 1) + x6) >> 2)
    val _tmp49: Long = (((_tmp46 << 16).toLong * (_tmp47 << 16).toLong) >> 31)
    val _tmp56: Long = (((_tmp48 << 16).toLong + _tmp49) >> 1)
    val _tmp54: Long = (((x3 << 16).toLong * (x6 << 16).toLong) >> 32)
    val _tmp50: Long = (((x1 << 16).toLong + (x2 << 16).toLong) >> 1)
    val _tmp51: Long = (((_tmp50 << 1) - (x3 << 16).toLong) >> 1)
    val _tmp52: Long = (((_tmp51 << 1) + (x4 << 16).toLong) >> 1)
    val _tmp53: Long = (((_tmp52 << 1) + (x5 << 16).toLong) >> 2)
    val _tmp55: Long = (((_tmp53 << 2) - (x6 << 16).toLong) >> 2)
    val _tmp57: Long = ((_tmp54 * _tmp55) >> 31)
    val _tmp59: Long = (((_tmp56 << 1) + _tmp57) >> 1)
    val _tmp58: Long = (((x2 << 16).toLong * (x3 << 16).toLong) >> 32)
    val _tmp60: Long = ((_tmp58 * (x4 << 16).toLong) >> 32)
    val _tmp62: Long = (((_tmp59 << 2) - _tmp60) >> 2)
    val _tmp61: Long = (((x1 << 16).toLong * (x3 << 16).toLong) >> 32)
    val _tmp63: Long = ((_tmp61 * (x5 << 16).toLong) >> 32)
    val _tmp65: Long = (((_tmp62 << 2) - _tmp63) >> 2)
    val _tmp64: Long = (((x1 << 16).toLong * (x2 << 16).toLong) >> 32)
    val _tmp66: Long = ((_tmp64 * (x6 << 16).toLong) >> 32)
    val _tmp68: Long = (((_tmp65 << 2) - _tmp66) >> 2)
    val _tmp67: Long = (((x4 << 16).toLong * (x5 << 16).toLong) >> 32)
    val _tmp69: Long = ((_tmp67 * (x6 << 16).toLong) >> 32)
    (((_tmp68 << 2) - _tmp69) >> 1)
  }

  /*@pre : ((4. <= x1) && (x1 <= 6.36) && (4. <= x2) && (x2 <= 6.36) && (4. <= x3) && (x3 <= 6.36) && (4. <= x4) && (x4 <= 6.36) && (4. <= x5) && (x5 <= 6.36) && (4. <= x6) && (x6 <= 6.36))*/
  /*@post: (res) => (res +/- 0.065)*/
  /*()*/
    def kepler2_fixed16_01(x1 : Int, x2 : Int, x3 : Long, x4 : Long, x5 : Long, x6 : Long) : Long = {
    val _tmp75: Long = (((x1 << 16).toLong * x4) >> 32)
    val _tmp70: Long = -(x1)
    val _tmp71: Long = ((_tmp70 + (x2 << 16).toLong) << 1)
    val _tmp72: Long = ((_tmp71 + (x3 << 1)) >> 2)
    val _tmp73: Long = ((_tmp72 << 1) - x4)
    val _tmp74: Long = ((_tmp73 + x5) >> 1)
    val _tmp76: Long = (((_tmp74 << 1) + x6) >> 2)
    val _tmp83: Long = ((_tmp75 * _tmp76) >> 31)
    val _tmp81: Long = (((x2 << 16).toLong * x5) >> 32)
    val _tmp77: Long = (((x1 << 16).toLong - (x2 << 16).toLong) << 1)
    val _tmp78: Long = ((_tmp77 + (x3 << 1)) >> 2)
    val _tmp79: Long = (((_tmp78 << 1) + x4) >> 1)
    val _tmp80: Long = (((_tmp79 << 1) - x5) >> 1)
    val _tmp82: Long = (((_tmp80 << 1) + x6) >> 2)
    val _tmp84: Long = ((_tmp81 * _tmp82) >> 31)
    val _tmp91: Long = ((_tmp83 + _tmp84) >> 1)
    val _tmp89: Long = ((x3 * x6) >> 32)
    val _tmp85: Long = (((x1 << 16).toLong + (x2 << 16).toLong) >> 1)
    val _tmp86: Long = (((_tmp85 << 1) - x3) >> 1)
    val _tmp87: Long = (((_tmp86 << 1) + x4) >> 1)
    val _tmp88: Long = (((_tmp87 << 1) + x5) >> 2)
    val _tmp90: Long = (((_tmp88 << 2) - x6) >> 2)
    val _tmp92: Long = ((_tmp89 * _tmp90) >> 31)
    val _tmp94: Long = (((_tmp91 << 1) + _tmp92) >> 1)
    val _tmp93: Long = (((x2 << 16).toLong * x3) >> 32)
    val _tmp95: Long = ((_tmp93 * x4) >> 32)
    val _tmp97: Long = (((_tmp94 << 2) - _tmp95) >> 2)
    val _tmp96: Long = (((x1 << 16).toLong * x3) >> 32)
    val _tmp98: Long = ((_tmp96 * x5) >> 32)
    val _tmp100: Long = (((_tmp97 << 2) - _tmp98) >> 2)
    val _tmp99: Long = (((x1 << 16).toLong * (x2 << 16).toLong) >> 32)
    val _tmp101: Long = ((_tmp99 * x6) >> 32)
    val _tmp103: Long = (((_tmp100 << 2) - _tmp101) >> 2)
    val _tmp102: Long = ((x4 * x5) >> 32)
    val _tmp104: Long = ((_tmp102 * x6) >> 32)
    (((_tmp103 << 2) - _tmp104) >> 2)
  }

  /*@pre : ((4. <= x1) && (x1 <= 6.36) && (4. <= x2) && (x2 <= 6.36) && (4. <= x3) && (x3 <= 6.36) && (4. <= x4) && (x4 <= 6.36) && (4. <= x5) && (x5 <= 6.36) && (4. <= x6) && (x6 <= 6.36))*/
  /*@post: (res) => (res +/- 0.0065)*/
  /*()*/
    def kepler2_fixed16_001(x1 : Long, x2 : Long, x3 : Long, x4 : Long, x5 : Long, x6 : Long) : Long = {
    val _tmp110: Long = ((x1 * x4) >> 32)
    val _tmp105: Long = -(x1)
    val _tmp106: Long = ((_tmp105 + x2) << 1)
    val _tmp107: Long = ((_tmp106 + (x3 << 1)) >> 2)
    val _tmp108: Long = ((_tmp107 << 1) - x4)
    val _tmp109: Long = ((_tmp108 + x5) >> 1)
    val _tmp111: Long = (((_tmp109 << 1) + x6) >> 2)
    val _tmp118: Long = ((_tmp110 * _tmp111) >> 31)
    val _tmp116: Long = ((x2 * x5) >> 32)
    val _tmp112: Long = ((x1 - x2) << 1)
    val _tmp113: Long = ((_tmp112 + (x3 << 1)) >> 2)
    val _tmp114: Long = (((_tmp113 << 1) + x4) >> 1)
    val _tmp115: Long = (((_tmp114 << 1) - x5) >> 1)
    val _tmp117: Long = (((_tmp115 << 1) + x6) >> 2)
    val _tmp119: Long = ((_tmp116 * _tmp117) >> 31)
    val _tmp126: Long = ((_tmp118 + _tmp119) >> 1)
    val _tmp124: Long = ((x3 * x6) >> 32)
    val _tmp120: Long = ((x1 + x2) >> 1)
    val _tmp121: Long = (((_tmp120 << 1) - x3) >> 1)
    val _tmp122: Long = (((_tmp121 << 1) + x4) >> 1)
    val _tmp123: Long = (((_tmp122 << 1) + x5) >> 2)
    val _tmp125: Long = (((_tmp123 << 2) - x6) >> 2)
    val _tmp127: Long = ((_tmp124 * _tmp125) >> 31)
    val _tmp129: Long = (((_tmp126 << 1) + _tmp127) >> 1)
    val _tmp128: Long = ((x2 * x3) >> 32)
    val _tmp130: Long = ((_tmp128 * x4) >> 32)
    val _tmp132: Long = (((_tmp129 << 2) - _tmp130) >> 2)
    val _tmp131: Long = ((x1 * x3) >> 32)
    val _tmp133: Long = ((_tmp131 * x5) >> 32)
    val _tmp135: Long = (((_tmp132 << 2) - _tmp133) >> 2)
    val _tmp134: Long = ((x1 * x2) >> 32)
    val _tmp136: Long = ((_tmp134 * x6) >> 32)
    val _tmp138: Long = (((_tmp135 << 2) - _tmp136) >> 2)
    val _tmp137: Long = ((x4 * x5) >> 32)
    val _tmp139: Long = ((_tmp137 * x6) >> 32)
    (((_tmp138 << 2) - _tmp139) >> 2)
  }

  /*@pre : ((4. <= x1) && (x1 <= 6.36) && (4. <= x2) && (x2 <= 6.36) && (4. <= x3) && (x3 <= 6.36) && (4. <= x4) && (x4 <= 6.36) && (4. <= x5) && (x5 <= 6.36) && (4. <= x6) && (x6 <= 6.36))*/
  /*@post: (res) => (res +/- 9.5e-06)*/
  /*()*/
    def kepler2_fixed32(x1 : Long, x2 : Long, x3 : Long, x4 : Long, x5 : Long, x6 : Long) : Long = {
    val _tmp145: Long = ((x1 * x4) >> 32)
    val _tmp140: Long = -(x1)
    val _tmp141: Long = ((_tmp140 + x2) << 1)
    val _tmp142: Long = ((_tmp141 + (x3 << 1)) >> 2)
    val _tmp143: Long = ((_tmp142 << 1) - x4)
    val _tmp144: Long = ((_tmp143 + x5) >> 1)
    val _tmp146: Long = (((_tmp144 << 1) + x6) >> 2)
    val _tmp153: Long = ((_tmp145 * _tmp146) >> 31)
    val _tmp151: Long = ((x2 * x5) >> 32)
    val _tmp147: Long = ((x1 - x2) << 1)
    val _tmp148: Long = ((_tmp147 + (x3 << 1)) >> 2)
    val _tmp149: Long = (((_tmp148 << 1) + x4) >> 1)
    val _tmp150: Long = (((_tmp149 << 1) - x5) >> 1)
    val _tmp152: Long = (((_tmp150 << 1) + x6) >> 2)
    val _tmp154: Long = ((_tmp151 * _tmp152) >> 31)
    val _tmp161: Long = ((_tmp153 + _tmp154) >> 1)
    val _tmp159: Long = ((x3 * x6) >> 32)
    val _tmp155: Long = ((x1 + x2) >> 1)
    val _tmp156: Long = (((_tmp155 << 1) - x3) >> 1)
    val _tmp157: Long = (((_tmp156 << 1) + x4) >> 1)
    val _tmp158: Long = (((_tmp157 << 1) + x5) >> 2)
    val _tmp160: Long = (((_tmp158 << 2) - x6) >> 2)
    val _tmp162: Long = ((_tmp159 * _tmp160) >> 31)
    val _tmp164: Long = (((_tmp161 << 1) + _tmp162) >> 1)
    val _tmp163: Long = ((x2 * x3) >> 32)
    val _tmp165: Long = ((_tmp163 * x4) >> 32)
    val _tmp167: Long = (((_tmp164 << 2) - _tmp165) >> 2)
    val _tmp166: Long = ((x1 * x3) >> 32)
    val _tmp168: Long = ((_tmp166 * x5) >> 32)
    val _tmp170: Long = (((_tmp167 << 2) - _tmp168) >> 2)
    val _tmp169: Long = ((x1 * x2) >> 32)
    val _tmp171: Long = ((_tmp169 * x6) >> 32)
    val _tmp173: Long = (((_tmp170 << 2) - _tmp171) >> 2)
    val _tmp172: Long = ((x4 * x5) >> 32)
    val _tmp174: Long = ((_tmp172 * x6) >> 32)
    (((_tmp173 << 2) - _tmp174) >> 2)
  }

}
